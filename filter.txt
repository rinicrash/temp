import cv2

def mean_filter(image, kernel_size):
    return cv2.blur(image, (kernel_size, kernel_size))

image = cv2.imread("img.png")
kernel_size = 5  
mean_filtered_image = mean_filter(image, kernel_size)
cv2.imshow("Mean Filtered Image", mean_filtered_image)
cv2.waitKey(0)
cv2.destroyAllWindows()

import cv2

def median_filter(image, kernel_size):
    return cv2.medianBlur(image, kernel_size)

image = cv2.imread("img.png")
kernel_size = 5 
median_filtered_image = median_filter(image, kernel_size)
cv2.imshow("Median Filtered Image", median_filtered_image)
cv2.waitKey(0)
cv2.destroyAllWindows()

import cv2
import numpy as np

def max_filter(image, kernel_size):
    kernel = np.ones((kernel_size, kernel_size), np.uint8)
    return cv2.dilate(image, kernel)

image = cv2.imread("img.png")
kernel_size = 5  
max_filtered_image = max_filter(image, kernel_size)
cv2.imshow("Max Filtered Image", max_filtered_image)
cv2.waitKey(0)
cv2.destroyAllWindows()

import cv2
import numpy as np

def min_filter(image, kernel_size):
    kernel = np.ones((kernel_size, kernel_size), np.uint8)
    return cv2.erode(image, kernel)

image = cv2.imread("img.png")
kernel_size = 5  
min_filtered_image = min_filter(image, kernel_size)
cv2.imshow("Min Filtered Image", min_filtered_image)
cv2.waitKey(0)
cv2.destroyAllWindows()
